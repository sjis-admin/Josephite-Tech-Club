# Generated by Django 5.2.5 on 2025-08-31 14:14

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('fee', models.DecimalField(decimal_places=2, default=500.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_active', models.BooleanField(default=True)),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('other_school', models.CharField(blank=True, max_length=300, null=True)),
                ('grade', models.CharField(choices=[('3', 'Grade 3'), ('4', 'Grade 4'), ('5', 'Grade 5'), ('6', 'Grade 6'), ('7', 'Grade 7'), ('8', 'Grade 8'), ('9', 'Grade 9'), ('10', 'Grade 10'), ('11', 'Grade 11'), ('12', 'Grade 12')], max_length=2)),
                ('group', models.CharField(choices=[('A', 'Group A (Grade 3-4)'), ('B', 'Group B (Grade 5-6)'), ('C', 'Group C (Grade 7-8)'), ('D', 'Group D (Grade 9-12)')], editable=False, max_length=1)),
                ('section', models.CharField(blank=True, help_text='Only for SJIS students', max_length=50, null=True)),
                ('roll', models.CharField(help_text='Unique identification from school', max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('registration_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_verified', models.BooleanField(default=False)),
                ('payment_verification_hash', models.CharField(blank=True, max_length=64)),
                ('registration_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school_college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registration.school')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(blank=True, choices=[('BKASH', 'bKash'), ('ROCKET', 'Rocket'), ('NAGAD', 'Nagad'), ('CARD', 'Credit/Debit Card'), ('UPAY', 'Upay'), ('OTHER', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('sessionkey', models.CharField(blank=True, max_length=200)),
                ('gateway_txnid', models.CharField(blank=True, max_length=200)),
                ('gateway_response', models.JSONField(blank=True, null=True)),
                ('payment_hash', models.CharField(blank=True, max_length=64)),
                ('verification_signature', models.CharField(blank=True, max_length=128)),
                ('client_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='registration.student')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentEventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('registration_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.event')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='events',
            field=models.ManyToManyField(through='registration.StudentEventRegistration', to='registration.event'),
        ),
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Created'), ('UPDATE', 'Updated'), ('DELETE', 'Deleted'), ('LOGIN', 'Logged In'), ('LOGOUT', 'Logged Out'), ('PAYMENT_VERIFY', 'Payment Verified'), ('PAYMENT_REJECT', 'Payment Rejected'), ('RECEIPT_GENERATE', 'Receipt Generated'), ('EMAIL_SENT', 'Email Sent'), ('BULK_UPDATE', 'Bulk Update'), ('SECURITY_ALERT', 'Security Alert')], db_index=True, max_length=20)),
                ('model_name', models.CharField(blank=True, max_length=50)),
                ('object_id', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['admin_user', 'timestamp'], name='registratio_admin_u_8e0918_idx'), models.Index(fields=['action', 'timestamp'], name='registratio_action_c4f233_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('PAYMENT_FRAUD', 'Payment Fraud Attempt'), ('RATE_LIMIT', 'Rate Limit Exceeded'), ('INVALID_HASH', 'Invalid Hash Verification'), ('SUSPICIOUS_IP', 'Suspicious IP Activity'), ('MULTIPLE_REGISTRATIONS', 'Multiple Registrations')], max_length=30)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registration.payment')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('related_student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registration.student')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['alert_type', 'created_at'], name='registratio_alert_t_9414f4_idx'), models.Index(fields=['ip_address'], name='registratio_ip_addr_1f2720_idx')],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(db_index=True, max_length=20, unique=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('last_downloaded_at', models.DateTimeField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='registration.payment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='registration.student')),
            ],
            options={
                'ordering': ['-generated_at'],
                'indexes': [models.Index(fields=['receipt_number'], name='registratio_receipt_63c602_idx'), models.Index(fields=['generated_at'], name='registratio_generat_af5b98_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('attempt_time', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.student')),
            ],
            options={
                'ordering': ['-attempt_time'],
                'indexes': [models.Index(fields=['ip_address', 'attempt_time'], name='registratio_ip_addr_a47cc0_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['transaction_id'], name='registratio_transac_5dd792_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='registratio_status_f3e8a5_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at'], name='registratio_created_2551d0_idx'),
        ),
        migrations.AddIndex(
            model_name='studenteventregistration',
            index=models.Index(fields=['registered_at'], name='registratio_registe_34b69b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studenteventregistration',
            unique_together={('student', 'event')},
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['email'], name='registratio_email_f09d83_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['registration_id'], name='registratio_registr_76774a_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['is_paid'], name='registratio_is_paid_7df1b7_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['created_at'], name='registratio_created_0c78a0_idx'),
        ),
    ]
